@model GJF.Domain.Models.User.UserEditModel

@{
    Layout = null;
}

@using (Ajax.BeginForm("EditUser", "User", new AjaxOptions { HttpMethod = "post", UpdateTargetId = "success" }))
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="row" id="success">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })

                    <div class="col-md-12">
                        @(Html.Kendo().TextBoxFor(model => model.FirstName).Name("FirstName").HtmlAttributes(new { placeholder = "შეიყვანეთ პიროვნების სახელი", @class = "form-control component-height" }))
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-12">
                        @(Html.Kendo().TextBoxFor(model => model.LastName).Name("LastName").HtmlAttributes(new { placeholder = "შეიყვანეთ პიროვნების გვარი", @class = "form-control component-height" }))
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-12">
                        @(Html.Kendo().TextBoxFor(model => model.UserName).Name("UserName").HtmlAttributes(new { placeholder = "შეიყვანეთ მომხმარებლის სახელი", @class = "form-control component-height" }))
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    @Html.LabelFor(model => model.UserRoles, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-12">
                        @(Html.Kendo().DropDownListFor(x => x.UserRoles).DataTextField("Text").Name("RoleId").DataValueField("Value").OptionLabel("აირჩიეთ მომხმარებლის უფლება").DataSource(source => { source.Read(read => { read.Action("GetRoles", "DropDown"); }); }).HtmlAttributes(new { @class = "form-control component-height" }))
                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-12">
                    <a class="btn btn-default col-md-11 component-height" style="margin-top:12px" href="@Url.Action("ResetPassword", "User", new { id = Model.Id })" id="resetPasswordBtn">პაროლის აღდგენა</a>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-12">
                    <button class="col-md-11 btn blue component-height" type="submit" style="margin-top:12px">დამახსოვრება</button>
                </div>
            </div>

        </div>
    </div>
}

<script type="text/javascript">

    $.validator.unobtrusive.parse(document);

    $('#resetPasswordBtn').click(function (e) {
        e.preventDefault();
        var element = this;
        var url = $(this).attr("href");
        $.ajax({
            url: url,
            type: "GET",
            //dataType: "json",
            traditional: true,
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.status == "Success") {
                    alert("Done");
                } else {
                    alert("Error occurs on the Database level!");
                }
            },
            error: function () {
                alert("An error has occured!!!");
            }
        });
    });
</script>

